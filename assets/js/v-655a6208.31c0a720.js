"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[211],{9327:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-655a6208",path:"/mysql/foreignKey.html",title:"外键约束",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"前言",slug:"前言",children:[]},{level:2,title:"创建外键",slug:"创建外键",children:[{level:3,title:"新建表",slug:"新建表",children:[]},{level:3,title:"修改表",slug:"修改表",children:[]},{level:3,title:"删除",slug:"删除",children:[]}]},{level:2,title:"选项说明",slug:"选项说明",children:[]},{level:2,title:"处理动作",slug:"处理动作",children:[{level:3,title:"ON DELETE",slug:"on-delete",children:[]},{level:3,title:"ON UPDATE",slug:"on-update",children:[]}]}],filePathRelative:"mysql/foreignKey.md",git:{updatedTime:1650723022e3,contributors:[{name:"Jerry Chen",email:"caffreygo@163.com",commits:2}]}}},6314:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="外键约束" tabindex="-1"><a class="header-anchor" href="#外键约束" aria-hidden="true">#</a> 外键约束</h1><h2 id="前言" tabindex="-1"><a class="header-anchor" href="#前言" aria-hidden="true">#</a> 前言</h2><p>🔖 外键表示一个表中的字段被另一个表中的一个字段引用。外键对相关表中的数据造成了限制，使MySQL能够保持数据完整性。</p><p>比如学生和班级表，学生表完全依赖班级表，我们可以通过外键约束让学生表与班级表产生关联，当班级表数据变化时影响学生表。</p><ul><li>父表和子表储存引擎要一致</li><li>使用InnoDB引擎支持外键约束</li><li>外键要与主表列类型一致</li><li>外键列使用索引（有些版本的mysql会自动帮助为外键设置索引)</li></ul><h2 id="创建外键" tabindex="-1"><a class="header-anchor" href="#创建外键" aria-hidden="true">#</a> 创建外键</h2><h3 id="新建表" tabindex="-1"><a class="header-anchor" href="#新建表" aria-hidden="true">#</a> 新建表</h3><p>下面创建班级表与学生表，并定义学生表与班级表建立外键约束。</p><p>学生表是子表，在子表定义外键，班级表是主表，id在主表。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token comment">-- 班级表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">TABLE</span> class <span class="token punctuation">(</span>id <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>name <span class="token keyword">varchar</span><span class="token punctuation">(</span><span class="token number">50</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token comment">-- 学生表</span>\n<span class="token keyword">CREATE</span> <span class="token keyword">table</span> stu2<span class="token punctuation">(</span>\n\tid <span class="token keyword">int</span> <span class="token keyword">PRIMARY</span> <span class="token keyword">KEY</span> <span class="token keyword">AUTO_INCREMENT</span><span class="token punctuation">,</span>\n\tsname <span class="token keyword">char</span><span class="token punctuation">(</span><span class="token number">30</span><span class="token punctuation">)</span> <span class="token operator">NOT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n\tclass_id <span class="token keyword">int</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">,</span>\n\t<span class="token keyword">CONSTRAINT</span> stu2_class\n\t<span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>class_id<span class="token punctuation">)</span>\n\t<span class="token keyword">REFERENCES</span> class<span class="token punctuation">(</span>id<span class="token punctuation">)</span>\n\t<span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span>\n<span class="token punctuation">)</span> <span class="token keyword">ENGINE</span> <span class="token operator">=</span> <span class="token keyword">InnoDB</span> <span class="token keyword">DEFAULT</span> <span class="token keyword">CHARSET</span><span class="token operator">=</span>utf8<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><blockquote><p>constraint: 约束</p></blockquote><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/mysql/foreignKey/er.png" alt=""></p><h3 id="修改表" tabindex="-1"><a class="header-anchor" href="#修改表" aria-hidden="true">#</a> 修改表</h3><p>下面是对学生表添加班级表的外键约束。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stu <span class="token keyword">ADD</span> \n<span class="token keyword">CONSTRAINT</span> stu_class\n<span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> <span class="token punctuation">(</span>class_id<span class="token punctuation">)</span> \n<span class="token keyword">REFERENCES</span> class<span class="token punctuation">(</span>id<span class="token punctuation">)</span> \n<span class="token keyword">ON</span> <span class="token keyword">DELETE</span> <span class="token keyword">CASCADE</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="删除" tabindex="-1"><a class="header-anchor" href="#删除" aria-hidden="true">#</a> 删除</h3><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stu <span class="token keyword">DROP</span> <span class="token keyword">FOREIGN</span> <span class="token keyword">KEY</span> stu_class<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="选项说明" tabindex="-1"><a class="header-anchor" href="#选项说明" aria-hidden="true">#</a> 选项说明</h2><p>下面列出外键关联用到的关键词。</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>CONSTRAINT</td><td>为外键约束定义名称</td></tr><tr><td>FOREIGN KEY</td><td>子表与父表关联的列</td></tr><tr><td>REFERENCES</td><td>子表关联的父表字段</td></tr><tr><td>ON DELETE</td><td>父表删除时的处理方式</td></tr><tr><td>ON UPDATE</td><td>父表更新时的处理方式</td></tr></tbody></table><h2 id="处理动作" tabindex="-1"><a class="header-anchor" href="#处理动作" aria-hidden="true">#</a> 处理动作</h2><h3 id="on-delete" tabindex="-1"><a class="header-anchor" href="#on-delete" aria-hidden="true">#</a> ON DELETE</h3><p>ON DELETE指在删除时的处理方式，常用的处理方式包括以下几种。</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>ON DELETE CASCADE</td><td>删除父表记录时，子表记录同时删除</td></tr><tr><td>ON DELETE SET NULL</td><td>删除父表记录时，子表记录设置为NULL（子表字段要允许NULL）</td></tr><tr><td>ON DELETE NO ACTION</td><td>删除父表记录时，子表不做任何处理，必须把子表处理完才可以删除主表（子表stu 有数据，主表class不能动，没有引用的时候才能删除）</td></tr></tbody></table><h3 id="on-update" tabindex="-1"><a class="header-anchor" href="#on-update" aria-hidden="true">#</a> ON UPDATE</h3><p>ON UPDATE 指在更新时的处理方式，常用的处理方式包括以下几种。</p><table><thead><tr><th>选项</th><th>说明</th></tr></thead><tbody><tr><td>ON UPDATE CASCADE</td><td>更新父表记录时，比如更改主表的主键(eg. id)时，子表记录同时更新</td></tr><tr><td>ON UPDATE SET NULL</td><td>更新父表记录时，比如更改主表的主键时，子表记录设置为NULL</td></tr><tr><td>ON UPDATE NO ACTION</td><td>更新父表记录时，子表不做任何处理，必须把子表处理完才可以更新主表(没有引用的时候才能更新)</td></tr></tbody></table>',27),t={render:function(s,n){return e}}}}]);