"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[8068],{1935:(s,n,a)=>{a.r(n),a.d(n,{data:()=>e});const e={key:"v-74c1a70f",path:"/mysql/dataType.html",title:"数据类型",lang:"zh-CN",frontmatter:{},excerpt:"",headers:[{level:2,title:"字符串",slug:"字符串",children:[{level:3,title:"数据类型",slug:"数据类型-1",children:[]},{level:3,title:"字符集",slug:"字符集",children:[]},{level:3,title:"校对规则",slug:"校对规则",children:[]},{level:3,title:"常用函数",slug:"常用函数",children:[]},{level:3,title:"正则表达式",slug:"正则表达式",children:[]},{level:3,title:"LIKE",slug:"like",children:[]}]},{level:2,title:"数值类型",slug:"数值类型",children:[{level:3,title:"前导零",slug:"前导零",children:[]}]},{level:2,title:"ENUM/SET",slug:"enum-set",children:[{level:3,title:"ENUM",slug:"enum",children:[]},{level:3,title:"SET",slug:"set",children:[]}]}],filePathRelative:"mysql/dataType.md",git:{updatedTime:1649681217e3,contributors:[{name:"Jerry Chen",email:"caffreygo@163.com",commits:2}]}}},1776:(s,n,a)=>{a.r(n),a.d(n,{default:()=>t});const e=(0,a(6252).uE)('<h1 id="数据类型" tabindex="-1"><a class="header-anchor" href="#数据类型" aria-hidden="true">#</a> 数据类型</h1><h2 id="字符串" tabindex="-1"><a class="header-anchor" href="#字符串" aria-hidden="true">#</a> 字符串</h2><h3 id="数据类型-1" tabindex="-1"><a class="header-anchor" href="#数据类型-1" aria-hidden="true">#</a> 数据类型</h3><p>下面是mysql支持的字符串类型</p><table><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">大小</th><th style="text-align:left;">用途</th></tr></thead><tbody><tr><td style="text-align:left;">CHAR</td><td style="text-align:left;">0-255字节</td><td style="text-align:left;">定长字符串</td></tr><tr><td style="text-align:left;">VARCHAR</td><td style="text-align:left;">0-65535 字节</td><td style="text-align:left;">变长字符串</td></tr><tr><td style="text-align:left;">TINYBLOB</td><td style="text-align:left;">0-255字节</td><td style="text-align:left;">不超过 255 个字符的二进制字符串</td></tr><tr><td style="text-align:left;">TINYTEXT</td><td style="text-align:left;">0-255字节</td><td style="text-align:left;">短文本字符串</td></tr><tr><td style="text-align:left;">BLOB</td><td style="text-align:left;">0-65 535字节</td><td style="text-align:left;">二进制形式的长文本数据</td></tr><tr><td style="text-align:left;">TEXT</td><td style="text-align:left;">0-65 535字节</td><td style="text-align:left;">长文本数据</td></tr><tr><td style="text-align:left;">MEDIUMBLOB</td><td style="text-align:left;">0-16 777 215字节</td><td style="text-align:left;">二进制形式的中等长度文本数据</td></tr><tr><td style="text-align:left;">MEDIUMTEXT</td><td style="text-align:left;">0-16 777 215字节</td><td style="text-align:left;">中等长度文本数据</td></tr><tr><td style="text-align:left;">LONGBLOB</td><td style="text-align:left;">0-4 294 967 295字节</td><td style="text-align:left;">二进制形式的极大文本数据</td></tr><tr><td style="text-align:left;">LONGTEXT</td><td style="text-align:left;">0-4 294 967 295字节</td><td style="text-align:left;">极大文本数据</td></tr></tbody></table><p>char类型是定长类型，比如定义了20长度的<code>char</code>类型，只存一个字符也占用20个长度，char好处是处理速度快，缺点是空间占用大，把手机号、邮箱、密码等长度相对固定的设置为char类型是不错的选择。</p><p>varchar类型与char相反，使用空间受内容影响，可以把文章标题、介绍等设置为 varchar类型更合适。</p><blockquote><p>字符串分<strong>二进制</strong>与<strong>非二进制</strong>类型，二进制用于储存图片、声音等文件，非二进制用于储存文本数据。</p><p>非二进制文本受字符集和校对规则影响。</p></blockquote><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/mysql/dataType/field.png" alt=""></p><h3 id="字符集" tabindex="-1"><a class="header-anchor" href="#字符集" aria-hidden="true">#</a> 字符集</h3><p>字符集(Character set)是多个字符的集合，字符集种类较多，每个字符集包含的字符个数不同。常用的字符集有GBK、BIG5、UTF8。</p><p>UTF8字符包含文字内容更广，如韩文、日文、德文兼容度更高，也是推荐使用的字符集。</p><p><strong>下面是查看服务器支持的字符集</strong></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SHOW</span> <span class="token keyword">CHARACTER</span> <span class="token keyword">SET</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/mysql/dataType/charset.png" alt=""></p><p>表不设置字符集继承数据库，字段不设置字符集继承表的</p><h3 id="校对规则" tabindex="-1"><a class="header-anchor" href="#校对规则" aria-hidden="true">#</a> 校对规则</h3><p>是在字符集内用于字符比较和排序的一套规则，以<code>_ci</code>结束的为大小写不敏感、<code>_bin</code>结束的为不区分大小写。</p><blockquote><p>校对规则就是针对字符串类型排序或者比较的一套规则算法 📌</p></blockquote><p><strong>下面是查看系统支持的校对规则</strong></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">show</span> COLLATION<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><img src="https://raw.githubusercontent.com/caffreygo/static/main/blog/mysql/dataType/collation.png" alt=""></p><p>当使用不区分大小写的校对规则时A与a是相同的，否则则不相同，这会影响到排序与比对。</p><p>如果使用<code>utf8_bin</code> 校对规则时，下面的查询将匹配不到大写的<code>PHP</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class <span class="token keyword">WHERE</span> cname <span class="token operator">=</span> <span class="token string">&#39;php&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>修改表校对规则，对表的原字段将不影响，只对新增字段影响。</p></blockquote><h3 id="常用函数" tabindex="-1"><a class="header-anchor" href="#常用函数" aria-hidden="true">#</a> 常用函数</h3><p><strong>大小写转换</strong> <code>UPPER() LOWER()</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> UPPER<span class="token punctuation">(</span>cname<span class="token punctuation">)</span> <span class="token keyword">as</span> cname<span class="token punctuation">,</span>LOWER<span class="token punctuation">(</span>description<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token punctuation">`</span><span class="token keyword">desc</span><span class="token punctuation">`</span> <span class="token keyword">from</span> class<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>Left&amp;right</strong> <code>LEFT() RIGHT()</code></p><p>left与right函数用于取左或右指定数量的字符，下面是取班级介绍前8个字符并用<code>…</code> 连接。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CONCAT<span class="token punctuation">(</span><span class="token keyword">LEFT</span><span class="token punctuation">(</span>description<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;...&#39;</span><span class="token punctuation">)</span> <span class="token keyword">FROM</span> class<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>mid</strong> <code>MID()</code></p><p>从中间取字符串，参数二为起始，参数三为取的字符数量。下面是获取从第二个字符取两个字符值为<code>hp</code>的。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span>  <span class="token keyword">from</span> class <span class="token keyword">where</span> <span class="token function">mid</span><span class="token punctuation">(</span>cname<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;hp&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>substring</strong> <code>SUBSTRING()</code></p><p>从指定位置开始向右取所有字符串，下面是获取从第二个位置开始的字符值为<code>hp</code>的记录。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">select</span> <span class="token operator">*</span> <span class="token keyword">from</span> class <span class="token keyword">where</span> SUBSTRING<span class="token punctuation">(</span>cname<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token string">&#39;hp&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>char_length</strong></p><p>获取字符串长度</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> CHAR_LENGTH<span class="token punctuation">(</span>cname<span class="token punctuation">)</span> <span class="token keyword">from</span> class<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>concat</strong></p><p>连接字符串使用</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> concat<span class="token punctuation">(</span><span class="token string">&#39;编号:&#39;</span><span class="token punctuation">,</span>id<span class="token punctuation">)</span> <span class="token keyword">as</span> id<span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token string">&#39;班级:&#39;</span><span class="token punctuation">,</span>cname<span class="token punctuation">)</span> <span class="token keyword">as</span> name <span class="token keyword">FROM</span> class<span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>将所有班级前加上<code>你们好</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> class <span class="token keyword">SET</span> cname <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;你们好:&#39;</span><span class="token punctuation">,</span>cname<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>截取班级介绍，超过8个字符的后面连接<code>…</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">IF</span><span class="token punctuation">(</span>confition<span class="token punctuation">,</span> <span class="token keyword">then</span><span class="token punctuation">,</span> <span class="token keyword">else</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token keyword">if</span><span class="token punctuation">(</span>CHAR_LENGTH<span class="token punctuation">(</span>cname<span class="token punctuation">)</span><span class="token operator">&gt;</span><span class="token number">8</span><span class="token punctuation">,</span>CONCAT<span class="token punctuation">(</span><span class="token keyword">LEFT</span><span class="token punctuation">(</span>cname<span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">&#39;...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>cname<span class="token punctuation">)</span> <span class="token keyword">as</span> name <span class="token keyword">FROM</span> class<span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>cdn网址更新</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">UPDATE</span> class <span class="token keyword">set</span> cname <span class="token operator">=</span> CONCAT<span class="token punctuation">(</span><span class="token string">&#39;https://cdn.com&#39;</span><span class="token punctuation">,</span> <span class="token function">mid</span><span class="token punctuation">(</span>cname<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">where</span> id <span class="token operator">&gt;=</span> <span class="token number">10</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="正则表达式" tabindex="-1"><a class="header-anchor" href="#正则表达式" aria-hidden="true">#</a> 正则表达式</h3><p>Mysql支持正则表达式操作 <code>REGEXP</code>，可用于处理复杂的匹配操作。</p><p><strong>查找第二个字符为<code>h</code>的字符串</strong></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> class <span class="token keyword">WHERE</span> cname <span class="token operator">REGEXP</span> <span class="token string">&#39;^.h&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>查找班级名称中包含<code>php</code> 或 <code>mysql</code>的记录</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> class <span class="token keyword">WHERE</span> cname <span class="token operator">REGEXP</span> <span class="token string">&#39;php|mysql&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>所有介绍中包含php与mysql的课程名前加上<code>你们好</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">update</span> class <span class="token keyword">set</span> cname <span class="token operator">=</span> <span class="token keyword">REPLACE</span><span class="token punctuation">(</span>cname<span class="token punctuation">,</span>cname<span class="token punctuation">,</span>concat<span class="token punctuation">(</span><span class="token string">&#39;你们好：&#39;</span><span class="token punctuation">,</span>cname<span class="token punctuation">)</span><span class="token punctuation">)</span> \n<span class="token keyword">where</span> description <span class="token operator">REGEXP</span>  <span class="token string">&#39;php|mysql&#39;</span><span class="token punctuation">;</span> \n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="like" tabindex="-1"><a class="header-anchor" href="#like" aria-hidden="true">#</a> LIKE</h3><p>在 <code>LIKE</code> 表达式中 <code>%</code> 用于匹配任意多个字符，<code>_</code> 用于匹配一个字符。</p><p>查找第二个字符为 <code>h</code> 的班级。</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span>  <span class="token keyword">FROM</span> class <span class="token keyword">WHERE</span> cname <span class="token operator">LIKE</span> <span class="token string">&#39;_h%&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h2 id="数值类型" tabindex="-1"><a class="header-anchor" href="#数值类型" aria-hidden="true">#</a> 数值类型</h2><p><strong>整型</strong></p><table><thead><tr><th>MySQL数据类型</th><th>范围（有符号）</th><th>范围（无符号）</th></tr></thead><tbody><tr><td>tinyint(m)</td><td>1个字节 范围(-128~127)</td><td>(0，255)</td></tr><tr><td>smallint(m)</td><td>2个字节 范围(-32768~32767)</td><td>(0，65 535)</td></tr><tr><td>mediumint(m)</td><td>3个字节 范围(-8388608~8388607)</td><td>(0，16 777 215)</td></tr><tr><td>int(m)</td><td>4个字节 范围(-2147483648~2147483647)</td><td>(0，4 294 967 295)</td></tr><tr><td>bigint(m)</td><td>8个字节 范围(+-9.22*10的18次方)</td><td>(0，18 446 744 073 709 551 615)</td></tr></tbody></table><div class="custom-container tip"><p class="custom-container-title">Tips</p><ul><li>取值范围如果加了（无符号）<code>unsigned</code>，则最大值翻倍，如tinyint unsigned的取值范围为(0~256)。</li><li>m的含义不是允许字段的长度，而是<strong>显示长度</strong>，在为字段设置 <code>zerofill</code> 时有效。</li></ul></div><h3 id="前导零" tabindex="-1"><a class="header-anchor" href="#前导零" aria-hidden="true">#</a> 前导零</h3><p>添加有前导零的字段 <code>zerofill</code></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> class <span class="token keyword">ADD</span> stu_count <span class="token keyword">smallint</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">)</span> ZEROFILL <span class="token keyword">default</span> <span class="token boolean">null</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p><strong>在命令行查看（有些GUI软件不显示前导零)，结果如下：</strong></p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token operator">+</span><span class="token comment">----+-------+--------------------------------------------+-----------+</span>\n<span class="token operator">|</span> id <span class="token operator">|</span> cname <span class="token operator">|</span> description                                <span class="token operator">|</span> stu_count <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+--------------------------------------------+-----------+</span>\n<span class="token operator">|</span>  <span class="token number">4</span> <span class="token operator">|</span> Mysql <span class="token operator">|</span> 数据库                                      <span class="token operator">|</span>    <span class="token number">000001</span> <span class="token operator">|</span>\n<span class="token operator">|</span>  <span class="token number">5</span> <span class="token operator">|</span> NEST  <span class="token operator">|</span> hello                                      <span class="token operator">|</span>      <span class="token boolean">NULL</span> <span class="token operator">|</span>\n<span class="token operator">+</span><span class="token comment">----+-------+--------------------------------------------+-----------+</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p><strong>浮点型</strong></p><table><thead><tr><th style="text-align:left;">类型</th><th style="text-align:left;">大小</th><th style="text-align:left;">范围（有符号）</th><th style="text-align:left;">范围（无符号）</th></tr></thead><tbody><tr><td style="text-align:left;">FLOAT</td><td style="text-align:left;">4 字节</td><td style="text-align:left;">(-3.402 823 466 E+38，-1.175 494 351 E-38)，0，(1.175 494 351 E-38，3.402 823 466 351 E+38)</td><td style="text-align:left;">0，(1.175 494 351 E-38，3.402 823 466 E+38)</td></tr><tr><td style="text-align:left;">DOUBLE</td><td style="text-align:left;">8 字节</td><td style="text-align:left;">(-1.797 693 134 862 315 7 E+308，-2.225 073 858 507 201 4 E-308)，0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td><td style="text-align:left;">0，(2.225 073 858 507 201 4 E-308，1.797 693 134 862 315 7 E+308)</td></tr><tr><td style="text-align:left;">DECIMAL</td><td style="text-align:left;">DECIMAL(M,D) ，m&lt;65 是总个数，d&lt;30</td><td style="text-align:left;">依赖于M和D的值</td><td style="text-align:left;">依赖于M和D的值</td></tr></tbody></table><p>下面是检测浮点数精度的示例</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> class <span class="token keyword">add</span> e <span class="token keyword">FLOAT</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">update</span> class <span class="token keyword">set</span> e <span class="token operator">=</span> <span class="token number">12345.66</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">;</span>     <span class="token comment">// 12345.66</span>\n<span class="token keyword">update</span> class <span class="token keyword">set</span> e <span class="token operator">=</span> <span class="token number">992345.66</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">;</span>    <span class="token comment">// 992346 近似值</span>\n\n<span class="token keyword">alter</span> <span class="token keyword">table</span> class <span class="token keyword">add</span> b DECIAMAL<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">update</span> class <span class="token keyword">set</span> e <span class="token operator">=</span> <span class="token number">12345678.66</span> <span class="token keyword">where</span> id<span class="token operator">=</span><span class="token number">11</span><span class="token punctuation">;</span>    <span class="token comment">// 12345678.99</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><blockquote><p>查看结果时会发布浮点数结果不精确</p></blockquote><div class="custom-container tip"><p class="custom-container-title">总结</p><ul><li>float：2^23 = 8388608，一共七位，这意味着最多能有7位有效数字，但绝对能保证的为6位，即float的精度为6~7位有效数字。（可保存七位以内的数据）</li><li>double：2^52 = 4503599627370496，一共16位，double的精度为15~16位</li><li>浮点型在数据库中存放的是近似值，而定点类型在数据库中存放的是精确值</li><li>decimal(m,d) 参数m&lt;65 是总个数，d&lt;30且 d&lt;m 是小数位</li><li>对货币等对精度敏感的数据，应该用定点数decimal存储</li></ul></div><h2 id="enum-set" tabindex="-1"><a class="header-anchor" href="#enum-set" aria-hidden="true">#</a> ENUM/SET</h2><h3 id="enum" tabindex="-1"><a class="header-anchor" href="#enum" aria-hidden="true">#</a> ENUM</h3><p>📗 ENUM 类型因为只允许在集合中取得一个值，有点类似于单选项。在处理相互排拆的数据时容易让人理解，比如人类的性别。换个枚举最大可以有 65535 个成员值</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> stu <span class="token keyword">ADD</span> sex <span class="token keyword">ENUM</span><span class="token punctuation">(</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">)</span> <span class="token keyword">DEFAULT</span> <span class="token boolean">NULL</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><blockquote><p>1对应“男”； 2对应“女”</p></blockquote><p>可以使用索引或值添加enum数据</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu <span class="token punctuation">(</span>sname<span class="token punctuation">,</span>class_id<span class="token punctuation">,</span>sex<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;李岗&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> stu <span class="token punctuation">(</span>sname<span class="token punctuation">,</span>class_id<span class="token punctuation">,</span>sex<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;李玉&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><p>可以使用值与索引检索ENUM</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">WHERE</span> sex<span class="token operator">=</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">from</span> stu <span class="token keyword">WHERE</span> sex<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> SET</h3><p>📗 SET 类型与 ENUM 类型相似但不相同。SET 类型可以从<strong>预定义的集合</strong>中取得任意数量的值。</p><blockquote><p>一个 SET 类型最多可以包含 64 项元素。</p></blockquote><p>使用SET类型添加文章属性字段</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">ALTER</span> <span class="token keyword">TABLE</span> article <span class="token keyword">ADD</span> flag <span class="token keyword">SET</span><span class="token punctuation">(</span><span class="token string">&#39;推荐&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;置顶&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;图文&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;热门&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>添加数据</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">INSERT</span> <span class="token keyword">INTO</span> article <span class="token punctuation">(</span>title<span class="token punctuation">,</span><span class="token keyword">status</span><span class="token punctuation">,</span>flag<span class="token punctuation">)</span> <span class="token keyword">VALUES</span><span class="token punctuation">(</span><span class="token string">&#39;标题&#39;</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">&#39;图文,推荐,置顶&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="查找" tabindex="-1"><a class="header-anchor" href="#查找" aria-hidden="true">#</a> 查找</h4><p>使用 <code>find_in_set</code> 查找数据</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> article <span class="token keyword">WHERE</span> find_in_set<span class="token punctuation">(</span><span class="token string">&#39;图文&#39;</span><span class="token punctuation">,</span>flag<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>使用<code>like</code> 查找数据</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> article <span class="token keyword">WHERE</span> flag <span class="token operator">like</span> <span class="token string">&#39;%置顶%&#39;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="二进制比较" tabindex="-1"><a class="header-anchor" href="#二进制比较" aria-hidden="true">#</a> 二进制比较</h4><p>可以使用二进制方式对SET类型进行<strong>模糊筛选</strong>。（二进制值相加转十进制）</p><table><thead><tr><th>SET成员</th><th>十进制值</th><th>二进制值</th></tr></thead><tbody><tr><td>推荐</td><td>1</td><td>0001</td></tr><tr><td>置顶</td><td>2</td><td>0010</td></tr><tr><td>图文</td><td>4</td><td>0100</td></tr><tr><td>热门</td><td>8</td><td>1000</td></tr></tbody></table><p>获取包含推荐的文章</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> article <span class="token keyword">WHERE</span> flag <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>获取包含推荐或者置顶的文章</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> article <span class="token keyword">WHERE</span> flag <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>获取包含推荐或者热门的文章</p><div class="language-sql ext-sql line-numbers-mode"><pre class="language-sql"><code><span class="token keyword">SELECT</span> <span class="token operator">*</span> <span class="token keyword">FROM</span> article <span class="token keyword">WHERE</span> flag <span class="token operator">&amp;</span> <span class="token number">9</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div>',108),t={render:function(s,n){return e}}}}]);